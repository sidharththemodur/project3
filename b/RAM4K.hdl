// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
         DMux8Way(
        	in=load, sel=address[0..2],
        	a=loadA, b=loadB, c=loadC, d=loadD, e=loadE, f=loadF, g=loadG, h=loadH
    	);
    	RAM512(in=in, address=address[3..11], load=loadA, out=ramA);
    	RAM512(in=in, address=address[3..11], load=loadB, out=ramB);
    	RAM512(in=in, address=address[3..11], load=loadC, out=ramC);
    	RAM512(in=in, address=address[3..11], load=loadD, out=ramD);
    	RAM512(in=in, address=address[3..11], load=loadE, out=ramE);
    	RAM512(in=in, address=address[3..11], load=loadF, out=ramF);
    	RAM512(in=in, address=address[3..11], load=loadG, out=ramG);
    	RAM512(in=in, address=address[3..11], load=loadH, out=ramH);
    	Mux8Way16(
        	sel=address[0..2],
        	a=ramA, b=ramB, c=ramC, d=ramD, e=ramE, f=ramF, g=ramG, h=ramH,
        	out=out
    	);
}